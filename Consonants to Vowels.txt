Consonants to Vowels
ProgramID- 7676
The program must accept a string S as the input. The program must
replace every consonant by the next nearest vowel. If there is no vowel
after a consonant then it must be removed from the string.
If there is no vowel in S, then print -1 as the output.
Boundary Condition(s):
1 <= Length of S <= 100
Input Format:
The first line contains the values of S.
Skill Rack
Output Format:
The first line contains the string as per the condition or -1.
Example Input/Output 1:
Input:
request
Output:
eeuue
Explanation:
In the string request, the first vowel after r is e. So the string becomes
eequest
In the string eequest, the first vowel after q is u. So the string becomes
eeuuest
There is no vowel after s and t so they are removed. The string becomes
eeuue
Hence the output is eeuue
#include<stdio.h>
#include<stdlib.h>
int isvowel(char ch) {
ch=tolower(ch);
if(ch== 'a' || ch=='e' || ch== 'i' || ch=='0' ||
ch== 'u'){
return 1;
}return 0;
}
int main()
char str[1001];
scanf("%s", str);
int l=strlen(str);
char temp [1001];
int t=0,start=0;
for(int i=0;i<l;i++){
if(isvowel(str[i]) ){
}
for(int j start;j<i;j++){
temp[t++]=str[i];
}
temp[t++]=str[i];
start=i+1;
}
}temp[t]='\0';
if(t==0){
printf("-1");
return 0;
}
printf("%s", temp);
return 0;
}